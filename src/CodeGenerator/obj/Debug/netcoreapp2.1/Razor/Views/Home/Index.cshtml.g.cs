#pragma checksum "C:\Users\xingbo\Documents\Work\netcore.generator\src\CodeGenerator\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "61692b6df822d93c1f2c0f9cb6647fdadafc4692"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\xingbo\Documents\Work\netcore.generator\src\CodeGenerator\Views\_ViewImports.cshtml"
using CodeGenerator;

#line default
#line hidden
#line 2 "C:\Users\xingbo\Documents\Work\netcore.generator\src\CodeGenerator\Views\_ViewImports.cshtml"
using CodeGenerator.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"61692b6df822d93c1f2c0f9cb6647fdadafc4692", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5f64f30916aefe84e4ab0089b1a21327c3023dd3", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/zTree/css/bootstrapStyle/bootstrapStyle.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/zTree/js/jquery.ztree.core.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/zTree/js/jquery.ztree.excheck.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/zTree/js/jquery.ztree.exhide.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/zTree/js/jquery.ztree.all.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\xingbo\Documents\Work\netcore.generator\src\CodeGenerator\Views\Home\Index.cshtml"
   ViewData["Title"] = "代码生成器"; 

#line default
#line hidden
            BeginContext(34, 82, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f9938ef5e1514dbb8f83461caad6752b", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(116, 1, true);
            WriteLiteral("\n");
            EndContext();
            BeginContext(117, 59, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ee822e2401044fa789ec43db30f0cbc4", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(176, 1, true);
            WriteLiteral("\n");
            EndContext();
            BeginContext(177, 62, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da8688d657cb49eeb19df685d0d1f6e6", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(239, 1, true);
            WriteLiteral("\n");
            EndContext();
            BeginContext(240, 61, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bfbf51552eac4874b4846c0625420d0f", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(301, 1, true);
            WriteLiteral("\n");
            EndContext();
            BeginContext(302, 58, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "aafa7b3c122b482db33df590b16af079", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(360, 15002, true);
            WriteLiteral(@"

<div id=""main"">
    <ul class=""layui-nav"">
        <li class=""layui-nav-item"">
            <a id=""Generator"" href=""javascript:void(0)"" >生成代码</a>
        </li>
        <li class=""layui-nav-item"" style=""float:right"">代码生成器v1.0</li>
    </ul>
    <div id=""menu-left"" class=""menu-left"">
        <div class=""layui-form left-border"">
            <ul id=""tree"" class=""ztree""></ul>
        </div>
    </div>
    <div id=""temp"" class=""temp"">
        <div class=""layui-form"">
            <ul id=""tree2"" class=""ztree""></ul>
        </div>
    </div>
</div>

<style>
    /*修改滚动条样式*/
    div::-webkit-scrollbar {
        width: 10px;
        height: 10px;
        /**/
    }

    div::-webkit-scrollbar-track {
        background: rgb(239, 239, 239);
        border-radius: 2px;
    }

    div::-webkit-scrollbar-thumb {
        background: #bfbfbf;
        border-radius: 10px;
    }

        div::-webkit-scrollbar-thumb:hover {
            /*background: #333;*/
        }

    div::-webkit-scrollbar-corner {
        background: rgb(");
            WriteLiteral(@"239,239,239);
    }

    html body {
        margin: 0 auto;
        margin-top: 80px;
        width: 900px;
        border-bottom: 10px solid rgb(239,239,239);
    }

    .menu-left {
        float: left;
        width: 50%;
        height: 600px;
        overflow-y: scroll;
    }

    .left-border {
        height: 100%;
        border-left: 10px solid rgb(239,239,239);
    }

    .temp {
        width: 50%;
        height: 600px;
        overflow-y: scroll;
    }
</style>

<script type=""text/javascript"">

    var setting = {
        view: {
            addHoverDom: addHoverDom,
            selectedMulti: false
        },
        edit: {
            enable: true,
            //给节点额外增加属性来控制“重命名”、“删除”图标的显示或隐藏

            showRenameBtn: showRenameBtn,
            showRemoveBtn: showRemoveBtn
        },
        check: {
            enable: true,   //true / false 分别表示 显示 / 不显示 复选框或单选框
            autoCheckTrigger: true,   //true / false 分别表示 触发 / 不触发 事件回调函数
            chkStyle: ""checkbox"",   //勾选框类型(checkbox 或");
            WriteLiteral(@" radio）
        },
        data: {
            simpleData: {
                enable: true
            }
        },
        callback: {
            beforeDrag: beforeDrag,
            beforeEditName: beforeEditName,
            beforeRemove: beforeRemove,
            beforeRename: beforeRename,
            onRemove: onRemove,
            onRename: onRename,
            beforeClick: beforeClick,
        }
    };

    var setting2 = {
        view: {
            selectedMulti: false,
            addHoverDom: addHoverDom,
        },
        edit: {
            enable: true,
            //给节点额外增加属性来控制“重命名”、“删除”图标的显示或隐藏
            showRenameBtn: showRenameBtn,
            showRemoveBtn: showRemoveBtn
        },
        check: {
            enable: true,   //true / false 分别表示 显示 / 不显示 复选框或单选框
            autoCheckTrigger: true,   //true / false 分别表示 触发 / 不触发 事件回调函数
            chkStyle: ""checkbox"",   //勾选框类型(checkbox 或 radio）
        },
        data: {
            simpleData: {
                enable: true
        ");
            WriteLiteral(@"    }
        },
        callback: {
            beforeDrag: beforeDrag,
            beforeEditName: beforeEditName,
            beforeRemove: beforeRemove,
            beforeRename: beforeRename,
            onRemove: onRemove,
            onRename: onRename,
        }
    };



    var zNodes;
    var log, className = ""dark"";
    var treeNodeEdit;
    var checkNode;
    function beforeDrag(treeId, treeNodes) {
        return false;
    }

    function ZtreeNode(id, pId, name) {//定义ztree的节点类
        this.id = id;
        this.pId = pId;
        this.name = name;
        this.noRemoveBtn = true;
        this.noEditBtn = true;
    }

    //选中事件
    function beforeClick(treeId, treeNode) {

        if (treeNode.id != ""0"" && treeNode.children == null) {
            checkNode = treeNode;
            var zTree = $.fn.zTree.getZTreeObj(""tree"");
            if (treeNode.level == 1) {
                //异步加载
                $.ajax({
                    url: '/home/GetServerByID',
                    type: 'post',
    ");
            WriteLiteral(@"                async: false,//使用同步的方式,true为异步方式
                    data: { Id: treeNode.id },//这里使用json对象
                    success: function (data) {
                        console.log(data);
                        if (data.code == 200) {
                            var arr = [];
                            $.each(data.data, function (k, v) {
                                var childZNode = new ZtreeNode(v.id, v.pId, v.name); //构造子节点
                                arr.push(childZNode);
                            })
                            zTree.addNodes(treeNode, arr, true);
                        }
                    }
                });
            }
        } else {
            checkNode = null;
        }
    }


    function beforeEditName(treeId, treeNode) {
        console.log(treeNode)
        className = (className === ""dark"" ? """" : ""dark"");
        showLog(""[ "" + getTime() + "" beforeEditName ]&nbsp;&nbsp;&nbsp;&nbsp; "" + treeNode.name);
        var zTree = $.fn.zTree.getZTreeObj(""tree");
            WriteLiteral(@""");
        zTree.selectNode(treeNode);
        treeNodeEdit = treeNode;
        var url = ""/home/edit?Id="" + treeNode.id;
        console.log(treeNode);
        if (treeNode.pId == ""temp0"") {
            url = ""/TemplateConfig/edit?Id="" + treeNode.id;
        }


        layui.use('layer', function () {
            var layer = layui.layer;
            layer.open({
                type: 2,
                area: ['750px', '500px'],
                fixed: false, //不固定
                maxmin: true,
                title: '编辑',
                content: url,
                btn: ['确定', '取消'],
                yes: function (index, layero) {
                    $(""#form"").length;//直接获取表单长度=0
                    $(layero).find(""#form"").length;//表单长度还是等于0
                    var submit = layero.find('iframe').contents().find(""#layuiadmin-app-form-edit"");
                    submit.click();
                }
            });
        });
        return false;
    }


    function beforeEditName2(treeId, treeNode) {
     ");
            WriteLiteral(@"   console.log(treeNode)
        showLog(""[ "" + getTime() + "" beforeEditName ]&nbsp;&nbsp;&nbsp;&nbsp; "" + treeNode.name);
        var zTree = $.fn.zTree.getZTreeObj(""tree"");
        zTree.selectNode(treeNode);
        treeNodeEdit = treeNode;
        var url = ""?Id="" + treeNode.id;
        layui.use('layer', function () {
            var layer = layui.layer;
            layer.open({
                type: 2,
                area: ['600px', '400px'],
                fixed: false, //不固定
                maxmin: true,
                title: '编辑',
                content: '/TemplateConfig/edit' + url,
                btn: ['确定', '取消'],
                yes: function (index, layero) {
                    $(""#form"").length;//直接获取表单长度=0
                    $(layero).find(""#form"").length;//表单长度还是等于0
                    var submit = layero.find('iframe').contents().find(""#layuiadmin-app-form-edit"");
                    submit.click();
                }
            });
        });
        return false;
    }



    //回调,");
            WriteLiteral(@"修改节点
    function editNode(data) {
        var zTree = $.fn.zTree.getZTreeObj(""tree"");
        treeNodeEdit.name = data.FullName;
        treeNodeEdit.noEditBtn = false;
        treeNodeEdit.noRemoveBtn = false;
        zTree.updateNode(treeNodeEdit);
    }

    function editNode2(data) {
        var zTree = $.fn.zTree.getZTreeObj(""tree2"");
        treeNodeEdit.name = data.Name;
        treeNodeEdit.noEditBtn = false;
        treeNodeEdit.noRemoveBtn = false;
        zTree.updateNode(treeNodeEdit);
    }


    function beforeRemove(treeId, treeNode, isDel) {
        layui.use('layer', function () {
            var url = ""/home/deleteServer""
            var para = { Id: treeNode.id };
            console.log(treeNode);
            if (treeNode.pId == ""temp0"") {
                zTree = $.fn.zTree.getZTreeObj(""tree2"");
                url = ""/TemplateConfig/deletetemp"";
            }
            zTree.selectNode(treeNode);
            var layer = layui.layer;
            layer.confirm('确认要删除吗？', {
              ");
            WriteLiteral(@"  btn: ['确定', '取消']
            }, function (index) {
                layer.close(index);
                $.ajax({
                    url: url,
                    type: 'post',
                    async: false,//使用同步的方式,true为异步方式
                    data: para,//这里使用json对象
                    success: function (data) {
                        if (data.code == 200) {
                            zTree.removeNode(treeNode);
                        }
                    }
                });
            }, function (index) {

            });
        });
        return false;
    }


    function onRemove(e, treeId, treeNode) {
        showLog(""[ "" + getTime() + "" onRemove ]&nbsp;&nbsp;&nbsp;&nbsp; "" + treeNode.name);
    }
    function beforeRename(treeId, treeNode, newName) {
        className = (className === ""dark"" ? """" : ""dark"");
        showLog(""[ "" + getTime() + "" beforeRename ]&nbsp;&nbsp;&nbsp;&nbsp; "" + treeNode.name);
        if (newName.length == 0) {
            alert(""节点名称不能为空."");
            var z");
            WriteLiteral(@"Tree = $.fn.zTree.getZTreeObj(""tree"");
            setTimeout(function () { zTree.editName(treeNode) }, 10);
            return false;
        }
        return true;
    }
    function onRename(e, treeId, treeNode) {
        showLog(""[ "" + getTime() + "" onRename ]&nbsp;&nbsp;&nbsp;&nbsp; "" + treeNode.name);
    }
    function showLog(str) {
        if (!log) log = $(""#log"");
        log.append(""<li class='"" + className + ""'>"" + str + ""</li>"");
        if (log.children(""li"").length > 8) {
            log.get(0).removeChild(log.children(""li"")[0]);
        }
    }
    function getTime() {
        var now = new Date(),
            h = now.getHours(),
            m = now.getMinutes(),
            s = now.getSeconds(),
            ms = now.getMilliseconds();
        return (h + "":"" + m + "":"" + s + "" "" + ms);
    }


    //是否显示编辑按钮
    function showRenameBtn(treeId, treeNode) {
        //获取节点所配置的noEditBtn属性值
        if (treeNode.noEditBtn != undefined && treeNode.noEditBtn) {
            return false;
        } else");
            WriteLiteral(@" {
            return true;
        }
    }
    //是否显示删除按钮
    function showRemoveBtn(treeId, treeNode) {
        //获取节点所配置的noRemoveBtn属性值
        if (treeNode.noRemoveBtn != undefined && treeNode.noRemoveBtn) {
            return false;
        } else {
            return true;
        }
    }
    var newCount = 1;
    var treeNodeAdd; //用来记录当前添加的节点对象

    //添加
    function addHoverDom(treeId, treeNode) {
        if (treeNode.level > 0) {
            return false;
        } else {
            //给节点添加""新增""按钮
            var sObj = $(""#"" + treeNode.tId + ""_span"");
            if (treeNode.editNameFlag || $(""#addBtn_"" + treeNode.id).length > 0) return;
            var addStr = ""<span class='button add' id='addBtn_"" + treeNode.id
                + ""' title='add node' onfocus='this.blur();'></span>"";
            sObj.after(addStr);
            var btn = $(""#addBtn_"" + treeNode.id);
            if (btn) btn.bind(""click"", function () {

                treeNodeAdd = treeNode;
                var url = ""/home/create""");
            WriteLiteral(@";
                if (treeNode.id == ""temp0"") {
                    url = ""/TemplateConfig/create"";
                }
                layui.use('layer', function () {
                    var layer = layui.layer;
                    layer.open({
                        type: 2,
                        area: ['750px', '500px'],
                        fixed: false, //不固定
                        maxmin: true,
                        content: url,
                        title: '添加',
                        btn: ['确定', '取消'],
                        yes: function (index, layero) {
                            $(""#form"").length;//直接获取表单长度=0
                            $(layero).find(""#form"").length;//表单长度还是等于0
                            var submit = layero.find('iframe').contents().find(""#layuiadmin-app-form-submit"");
                            submit.click();
                        }
                    });
                });

                return false;
            });
        }

    };

    //回调,添加节点
    f");
            WriteLiteral(@"unction addNode(data) {
        var zTree = $.fn.zTree.getZTreeObj(""tree"");
        zTree.addNodes(treeNodeAdd, { id: data.Id, pId: treeNodeAdd.id, name: data.FullName, noEditBtn: false, noRemoveBtn: false });
    }


    function addNode2(data) {
        var zTree = $.fn.zTree.getZTreeObj(""tree2"");
        zTree.addNodes(treeNodeAdd, { id: data.Id, pId: treeNodeAdd.id, name: data.Name, noEditBtn: false, noRemoveBtn: false });
    }


    function selectAll() {
        var zTree = $.fn.zTree.getZTreeObj(""tree"");
        zTree.setting.edit.editNameSelectAll = $(""#selectAll"").attr(""checked"");
    }

    $(document).ready(function () {

        var winHeight = $(window).height() - 60;

        layui.use('layer', function () {
            layer = layui.layer;
        });
        $.ajax({
            url: '/Home/GetTreeDBList',
            type: 'post',
            async: false,//使用同步的方式,true为异步方式
            data: {},//这里使用json对象
            success: function (data) {
                zNodes = data.data;
         ");
            WriteLiteral(@"   }
        });
        zTree = $.fn.zTree.init($(""#tree""), setting, zNodes);


        $.ajax({
            url: '/TemplateConfig/GetTempList',
            type: 'post',
            async: false,//使用同步的方式,true为异步方式
            data: {},//这里使用json对象
            success: function (data) {
                zNodes = data.data;
            }
        });
        zTree2 = $.fn.zTree.init($(""#tree2""), setting2, zNodes);

        $(""#Generator"").click(function () {
            var selectedNodes = zTree.getCheckedNodes();
            var selectedNodes2 = zTree2.getCheckedNodes();
            var tables = [];
            var temps = [];
            $.each(selectedNodes, function (k, v) {
                if (v.level == 3) {
                    tables.push(v.id);
                }
            });
            $.each(selectedNodes2, function (k, v) {
                if (v.level == 1) {
                    temps.push(v.id);
                }
            });
            if (tables.length == 0 || temps.length == 0) {
        ");
            WriteLiteral(@"        layui.use('layer', function () {
                    layer = layui.layer;
                    layer.msg(""请选择生成的表跟模板!"");
                });

            } else {
                $.ajax({
                    url: '/Home/Generator',
                    type: 'post',
                    async: false,//使用同步的方式,true为异步方式
                    data: { tables: tables, temps: temps },//这里使用json对象
                    success: function (data) {
                        layui.use('layer', function () {
                            layer.msg(data.msg);
                        });
                    }
                });
            }

        })
    });

</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
