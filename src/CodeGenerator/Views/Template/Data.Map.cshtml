@using CodeGenerator.Common
@model TableConfig
@{
    string functionStr = Model.TableName.Substring(0, 1).ToLower() + Model.TableName.Substring(1);
    bool fieldPascal = (bool)ViewData["FieldPascal"];
    List<string> ids = new List<string>() { "id", "Id", "iD", "ID" };
    var main = Model.ColumnConfig.SingleOrDefault(x => ids.Contains(x.PropName));
}
<pre>
/*
* @Model.TableName
* create by @ViewData["Auth"].ToString() @DateTime.Now.ToString("yyyy/MM/dd")
*/
using System;
using System.Collections.Generic;
using System.Text;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Sansunt.HiCard.Domain.Models;

namespace Sansunt.HiCard.Infra.Data.Map
{
    /// <summary>
    /// des:@Model.FullName 数据结构
    /// create by @ViewData["Auth"].ToString() @DateTime.Now.ToString("yyyy/MM/dd")
    ///</summary>
    public class @(Model.FullName)Map : IEntityTypeConfiguration<@Model.FullName>
    {
        public void Configure(EntityTypeBuilder<@Model.FullName> builder)
        {
            builder.ToTable("@Model.TableName");//设置表名
            builder.HasKey(x => x.Id);//设置主键
            @foreach (var item in Model.ColumnConfig)
            {
                @Html.Raw($"builder.Property(c => c.{item.PropName}).HasColumnName(\"{item.ColumnName}\");")

            }
        }

    }
}
</pre>